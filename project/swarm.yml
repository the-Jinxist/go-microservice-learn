#version
version: '3'

services:

  #Use the exact name you used to represent the service in the docker-compose file
  broker-service:
    image: neofemo/broker-service:1.0.1
    deploy:
      mode: replicated
      replicas: 1
  
  #Use the exact name you used to represent the service in the docker-compose file
  listener-service:
    image: neofemo/listener-service:1.0.1
    deploy:
      mode: replicated
      replicas: 1
  
  frontend-service:
    image: neofemo/front-end:1.0.0
    deploy:
      mode: replicated
      replicas: 1
  
  authentication-service:
    image: neofemo/authentication-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      #We're adding environmental variables from here. The environmental variable is the link the the db source
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
  
  logger-service:
    image: neofemo/logger-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
  
  mail-service:
    image: neofemo/mail-service:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_ADDRESS: neo.andersen@matrix.com
      FROM_NAME: "Neo Andersen"
  
  rabbitmq:
    image: 'rabbitmq:3.11.10-management-alpine'
    # This makes sure there's only one instance of the rabbitmq image running
    deploy:
      mode: global
  
  mongo:
    image: 'mongo:4.2.17-bionic'
    ports:
      - "27017:27017"
    deploy:
      mode: global
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password 
    volumes:
      - ./db-data/mongo/:/data/db
  
  #This will provide a mailhog instance for us to use
  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"
    deploy:
      mode: replicated
      replicas: 2
  
  postgres:
    image: 'postgres:14.0'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    #this adds the database files to our project. specifically at the ./db-data/postgres directory. weird choice but okay
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/



