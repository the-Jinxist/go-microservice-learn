version: '3'

#services we are creating, first one we named broker-service
services:
  #Added this postgres docker container for our project
  postgres:
    image: 'postgres:14.0'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    #this adds the database files to our project. specifically at the ./db-data/postgres directory. weird choice but okay
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
  
  mongo:
    image: 'mongo:4.2.17-bionic'
    ports:
      - "27017:27017"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password 
    volumes:
      - ./db-data/mongo/:/data/db
  
  rabbitmq:
    image: 'rabbitmq:3.11.10-management-alpine'
    ports:
      - 5672:5672   # for sender and consumer connections
      - 15672:15672 # for serve RabbitMQ GUI
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/data/
  
  #This will provide a mailhog instance for us to use
  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"

  broker-service:

    #providing the path to the dockerfile since it is another folder
    build: 
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: always

    #our frontend is already listening on port 80, so we're mapping port 8080 to port 80 for our broker service
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1
  
  authentication-service:
    #providing the path to the dockerfile since it is another folder
    build: 
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always

    #our frontend is already listening on port 80, so we're mapping port 8081 to port 80 for our authentication service
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      #We're adding environmental variables from here. The environmental variable is the link the the db source
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
  
  logger-service:

    #providing the path to the dockerfile since it is another folder
    build: 
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  mail-service:

    #providing the path to the dockerfile since it is another folder
    build: 
      context: ./../mail-service
      dockerfile: ./../mail-service/mail-service.dockerfile
    restart: always

    #our frontend is already listening on port 80, so we're mapping port 8082 to port 80 for our mail service
    ports:
      - "8082:80"
    deploy:
      mode: replicated
      replicas: 1
    
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_ADDRESS: neo.andersen@matrix.com
      FROM_NAME: "Neo Andersen"

