version: '3'

#services we are creating, first one we named broker-service
services:
  #Added this postgres docker container for our project
  postgres:
    image: 'postgres:14.0'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    #this adds the database files to our project. specifically at the ./db-data/postgres directory. weird choice but okay
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
  
  mongo:
    image: 'mongo:4.2.17-bionic'
    ports:
      - "27017:27017"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password 
    volumes:
      - ./db-data/mongo/:/data/db
  
  #This will provide a mailhog instance for us to use
  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"

  broker-service:

    #providing the path to the dockerfile since it is another folder
    build: 
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: always

    #our frontend is already listening on port 80, so we're mapping port 8080 to port 80 for our broker service
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1
  
  authentication-service:
    #providing the path to the dockerfile since it is another folder
    build: 
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always

    #our frontend is already listening on port 80, so we're mapping port 8081 to port 80 for our authentication service
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      #We're adding environmental variables from here
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
  
  logger-service:

    #providing the path to the dockerfile since it is another folder
    build: 
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

